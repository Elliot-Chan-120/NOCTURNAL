# =====================================
# FOLDERS
# =====================================
predictions: "predictions"
input_folder: "input_folder"
assessments: "assessments"
model_folder: "ml_models"
input_fp_folder: "input_fingerprint_data"
database: "database"
padel_xmls: "padel_fp_xmls"
optimizer_database: "optimizer_database"
network_folder: "network_folder"

# [BIOACTIVITY DATABASE FILES]
rawdf_1: "1_raw_bioact.csv"
labeldf_2: "2_labelled_bioact_data.csv"
pIC50df_3: "3_pIC50_dataclass.csv"
smile_data: "molecules.smi"
fp_output: "fingerprint_output.csv"
fingerprintdf_4: "4_Bioactivity_Dataset_pIC50.csv"


# =====================================
# PADEL SETTINGS
# =====================================
try_limit: 3
settings:
  'AtomPairs2D': 'AtomPairs2DFingerprinter.xml'
  'AtomPairs2DCount': 'AtomPairs2DFingerprintCount.xml'
  'CDK': 'Fingerprinter.xml'
  'CDKextended': 'ExtendedFingerprinter.xml'
  'CDKgraphonly': 'GraphOnlyFingerprinter.xml'
  'EState': 'EStateFingerprinter.xml'
  'KlekotaRoth': 'KlekotaRothFingerprinter.xml'
  'KlekotaRothCount': 'KlekotaRothFingerprintCount.xml'
  'MACCS': 'MACCSFingerprinter.xml'
  'PubChem': 'PubchemFingerprinter.xml'
  'Substructure': 'SubstructureFingerprinter.xml'
  'SubstructureCount': 'SubstructureFingerprintCount.xml'


#=====================================
# MODEL TRAINING SETTINGS
#=====================================
ml_model_type: 'Stacking'
# OPTIONS -> RandomForestRegressor, XGBoosting, Stacking
# Brief explanation of each model in README.md

train_test_split:
  test_size: 0.2
  random_state: 42
  shuffle: true

cross_validate:
  cv: 5
  scoring: scoring
  return_estimator: true


# =====================================
# HYPERPARAM. OPTIMIZATION SETTINGS
# =====================================
grid_search:
  scoring: 'neg_mean_squared_error'
  cv: 5
  n_jobs: -1
  verbose: 1

use_best_params: true


# =====================================
# DEFAULT MODEL SETTINGS
# =====================================
random_forest_params:
  n_estimators: 100
  max_depth: null
  min_samples_split: 2
  min_samples_leaf: 1
  max_features: null
  bootstrap: true
  random_state: 42

xgb_params:
  n_estimators: 100
  learning_rate: 0.1
  max_depth: 6
  subsample: 0.8
  colsample_bytree: 0.8


# =====================================
# MutaGen SETTINGS
# =====================================
candidates: 20    # how many copies of the starting molecule you want to undergo mutations
iterations: 100   # how many times you want to introduce random mutations
target_increase: 1  # this is how much of an increase in pIC50 you are aiming to obtain from the optimized molecule
error_threshold: -0.05   # when we hit a plateau, how much are you willing to sacrifice in performance temporarily?
success_threshold: 0.05   # what is the minimum performance increase you will accept?
retain_threshold: 3  # how many times the molecule can fail to improve before exploring other optimization routes


# =====================================
# CSNodes SETTINGS
# sampling strategy options: balanced, performance, mcs_optimized
# =====================================
target_size: 100   # the target amount of nodes you want to show up in the CSN visualizations
# Note: please use when coming across big datasets (200+) and using one of the sampling strategies to prevent bottlenecks


# =====================================
# ChemNet SETTINGS
# =====================================
colorscale: Viridis
transparent_nodes: True  # makes nodes transparent if True -> lets you see the molecules better
node_toggle: True   # keeps / removes nodes
label_toggle: False  # just displays the hover text
2D_molecules: True  # displays 2D structures
node_size: 2
# NOTE: this is only active when the weight_method parameter for ChemNet is 'hybrid'
tanimoto_bias: 0.5  # determines how much weight the plot is biased towards: overall similarity (1) or maximum common substructure (0)


# ====
# MISC
# ====
data_scout_csv: true
auto_save_model: true
n_features: 20
